learning apache thrift 读书笔记
Chapter 1
1、分布式系统和服务
2、面向服务架构
3、分布式系统（组件化）
4、可维护性
	1)自由选择提供服务的语言和框架；
	2)工作人员分组自由化、可外包、可扩展；
	3)服务由一个接口提供，更容易理解、监控、调试；
	4)更容易调试bug；
	5）开发计划的更改、版本的迭代更新更容易操作。
5、可扩展性
	垂直扩展：增加单机性能；
	水平扩展：增加节点；
6、可测试性
	由于是接口形式提供服务、且每个服务都是自包含、独立的，因此测试对应服务即可。

7、apache thrift的介绍
8、支持的语言种类
9、数据类型
	某些语言中，一个变量定义后类型不可以改变（如C，先编译），而另外一些就可以（如PHP）。
	作用是：在传输变量前，先将变量映射到每种编程语言理解的最基本数据类型，传输过程需要序列化，
	传输后，将接收端的变量转换回原来的数据结构。
10、传输
	包括HTTP协议、套接字或ftp传输。如何选择取决于你解决方案的架构。
11、协议
	包括json、二进制、plain text等文件形式。如何选择取决于你所要传输的数据中类（图像使用二进制传输）。
12、版本控制
	是一种用来管理服务接口变化的方法。
	主要问题就是不同版本更新后，版本兼容问题。
	解决方案是；1)、服务认为就是function，增添系数达到增添模块的目的，但是参数不能重用；
				2)、因为新填功能后而新添的参数设定默认值，不至于老版本不能使用；
				3)、不要重命名服务或方法的名称。
13、保密
	服务暴露在外网后的保密工作，以及在内网下的便利使用。thrift默认使用TSSLTransportFactory。
14、接口描述性语言
	使用IDL，您可以在一个文件中定义服务及其使用的所有变量。
	它是对服务看起来类似的内容的明确描述，而不涉及实现细节。

Chapter 4 understanding how apache thrift works
1、thrift工具
	1)设计服务；
	2)准备thrift文件；
	3)生成service和client库；
	4)实现服务和客户端；
	5)运行。